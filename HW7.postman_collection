{
	"info": {
		"_postman_id": "97d07032-f30f-4921-9ea6-b6858ec3c1b7",
		"name": "HW7 API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33523924"
	},
	"item": [
		{
			"name": "Create user account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"userName\": \"New user\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/billingservice/Billing",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"billingservice",
						"Billing"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check created user account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User account is created\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"    pm.expect(jsonData.userName).to.eql(\"New user\");\r",
							"    pm.expect(jsonData.balance).to.eql(0);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/billingservice/Billing/1",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"billingservice",
						"Billing",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Increase user account balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"accountId\": 1,\r\n  \"value\": 1000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/billingservice/Billing/increase",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"billingservice",
						"Billing",
						"increase"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check user increased account balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User account is increased\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"    pm.expect(jsonData.userName).to.eql(\"New user\");\r",
							"    pm.expect(jsonData.balance).to.eql(1000);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/billingservice/Billing/1",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"billingservice",
						"Billing",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create correct order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"accountId\": 1,\r\n  \"price\": 250\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/orderservice/Order",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orderservice",
						"Order"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check user decreased account balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User account is decreased\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"    pm.expect(jsonData.userName).to.eql(\"New user\");\r",
							"    pm.expect(jsonData.balance).to.eql(750);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/billingservice/Billing/1",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"billingservice",
						"Billing",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check successful order notification",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Order notification is successful\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.result).to.eql(0);\r",
							"    pm.expect(jsonData.accountId).to.eql(1);\r",
							"    pm.expect(jsonData.price).to.eql(250);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"setTimeout(function(){}, 250);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/notificationservice/Notification/1",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"notificationservice",
						"Notification",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create incorrect order",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"accountId\": 1,\r\n  \"price\": 5000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/orderservice/Order",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orderservice",
						"Order"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check that user account balance is not changed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User account is not changed\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"    pm.expect(jsonData.userName).to.eql(\"New user\");\r",
							"    pm.expect(jsonData.balance).to.eql(750);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/billingservice/Billing/1",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"billingservice",
						"Billing",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check unsuccessful order notification",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Order notification is unsuccessful\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.result).to.eql(1);\r",
							"    pm.expect(jsonData.accountId).to.eql(1);\r",
							"    pm.expect(jsonData.price).to.eql(5000);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"setTimeout(function(){}, 250);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/notificationservice/Notification/1",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"notificationservice",
						"Notification",
						"1"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "arch.homework"
		}
	]
}